package com.sacumen.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.stereotype.Component;

import com.sacumen.service.CustomIserDetailsService;

@Component
@EnableWebSecurity
public class MySecurityAdapter{
	
	@Autowired
	  CustomIserDetailsService userDetailsService;
	
		/*
		 * @Bean public SecurityFilterChain filterChain(HttpSecurity http) throws
		 * Exception { http.cors().and().csrf().disable() .authorizeHttpRequests()
		 * .requestMatchers("/signIn").permitAll()
		 * .requestMatchers("/welcome","/signIn") .permitAll() .anyRequest()
		 * .authenticated() .and() .formLogin();
		 * 
		 * return http.build(); }
		 */
	
	 @Bean
	  public AuthenticationManager authenticationManager(AuthenticationConfiguration authConfig) throws Exception {
	 
		 
		 return authConfig.getAuthenticationManager();
	  }

	  @Bean
	  public PasswordEncoder passwordEncoder() {
	    return new BCryptPasswordEncoder();
	  }

	 

}
