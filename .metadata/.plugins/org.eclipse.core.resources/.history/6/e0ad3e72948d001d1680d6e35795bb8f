package com.sacumen.serviceTest;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;
import org.springframework.web.client.RestTemplate;

import com.sacumen.model.User;
import com.sacumen.service.GitlabServiceI;

public class GitLabServiceTest {


   
	@Autowired
	private MockMvc mvc;
   @MockBean
    private GitlabServiceI service;
   @Test
   public void gitalabUsersTest() throws Exception {
	   User user=new User();
	   user.setId(1);
	   user.setUsername("sam");
	   user.setName("Karan");
	   user.setAvatar_url("https://secure.gravatar.com/avatar/44ebd1f0fff1651c1c74d40fb0035a3b?s=80&d=identicon");
	   user.setState("active");
	   user.setWeb_url("https://gitlab.com/project_22253248_bot");
	   User user1=new User();
	   user1.setId(1);
	   user1.setUsername("abcd");
	   user1.setName("Dinesh");
	   user1.setAvatar_url("https://secure.gravatar.com/avatar/d3590092c3dd7c650bfa381fe6f7a0a2?s=80&d=identicon");
	   user1.setState("active");
	   user1.setWeb_url("https://gitlab.com/project_22285245_bot1");
	
	   List<User> list=new ArrayList<>();
	   list.add(user);
	   list.add(user1);
	   
	   Mockito.when(service.getUsers()).thenReturn(list);
		mvc.perform(MockMvcRequestBuilders.get("/GitLabApiController/projects").contentType(MediaType.APPLICATION_JSON))
				.andExpect(MockMvcResultMatchers.status().isOk());
		/*
		 * Mockito .when(restTemplate.getForEntity(
		 * "http://localhost:8080/GitLabApiController/users", User.class))
		 * .thenReturn(new ResponseEntity(list, HttpStatus.OK));
		 */

    List<User> users = service.getUsers();
     Assertions.assertEquals(list, users );
   }
}
