package com.sacumen.serviceTest;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;

import org.junit.Assert;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;
import org.springframework.web.client.RestTemplate;

import com.sacumen.controller.GitLabApiController;
import com.sacumen.model.Project;
import com.sacumen.model.User;
import com.sacumen.service.GitlabServiceI;

@WebMvcTest(controllers = GitLabApiController.class)
@AutoConfigureMockMvc(addFilters = false)

public class GitLabServiceTest {


   
	@Autowired
	private MockMvc mvc;
	@Autowired
	private TestRestTemplate restTemplate;
   @MockBean
    private GitlabServiceI service;
	private List<User> users;
   
   @Test
   public void gitalabUsersTest() throws Exception {
	 
	 
	   Mockito.when(service.getUsers()).thenReturn(users);
		mvc.perform(MockMvcRequestBuilders.get("/GitLabApiController/users").contentType(MediaType.APPLICATION_JSON))
				.andExpect(MockMvcResultMatchers.status().isOk());
		/*
		 * Mockito .when(restTemplate.getForEntity(
		 * "http://localhost:8080/GitLabApiController/users", User.class))
		 * .thenReturn(new ResponseEntity(list, HttpStatus.OK));
		 */

		/*
		 * List<User> users = service.getUsers(); Assertions.assertEquals(list, users );
		 */
   }
   @Test
   public void gitLabpeojectsTest() throws URISyntaxException {
	   final String baseUrl = "http://localhost:8080/GitLabApiController/projects";
		URI uri = new URI(baseUrl);
		TestRestTemplate testRestTemplate = new TestRestTemplate();
		ResponseEntity<Project> response = testRestTemplate.
				  getForEntity(uri , Project.class);
	//	ResponseEntity<Project> responseEntity = this.restTemplate.getForEntity(uri,Project.class);

		Assertions.assertEquals(response.getStatusCode(), HttpStatus.OK);
	//	System.out.println("employee = " + employee);

		// Verify request succeed
	//	Assert.assertEquals(200, responseEntity.getStatusCodeValue());
	}
	   
   
}
